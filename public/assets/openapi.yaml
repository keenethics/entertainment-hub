openapi: 3.0.3
info:
  title: EntertainmentHub
  description: Service to list and compare different entertainment organizations and specialists
  version: 0.0.1
servers:
  - url: http://localhost:3000/api/
paths:
  /district:
    get:
      tags:
        - districts
      summary: List districts
      description: Provides a list of city districts
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    example: 2024-04-22T09:09:33.776Z
                    format: datetime
                  name:
                    type: string
                    example: Lychakiv
  /event:
    get:
      tags:
        - events
      summary: List of events
      description: Provides a list of events
      parameters:
        - in: query
          name: month
          schema:
            type: integer
          description: A number on a month to query by
          required: true
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  metaData:
                    type: object
                    properties:
                      lastCursor:
                        type: string
                        format: uuid
                      hasNextPage:
                        type: boolean
                      queryMonth:
                        type: integer
                        example: 1
  /feedback:
    post:
      tags:
        - feedbacks
      summary: Send feedback
      description: Allows to send feedback to website admins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                phone:
                  type: string
                  example: +120394883294
                callMe:
                  type: boolean
                email:
                  type: string
                  format: email
                message:
                  type: string
                  example: You are great!
      responses:
        '200':
          description: Successful submit
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedbackSent:
                    type: boolean
  /navigation:
    get:
      tags:
        - navigation
      summary: List official social media links
      description: Provides a list of social media links
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Instagram
                    href:
                      type: string
                      example: https://www.instagram.com/
  /search:
    get:
      tags:
        - search
      summary: List events/specialists/organizations
      description: Provides a list of events, specialists and organizations.
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: ['individual', 'family', 'group', 'business', 'pair', 'kids']
          description: A type of events specialists/organizations provide (may be multiple)
        - in: query
          name: query
          schema:
            type: string
          description: A search query
        - in: query
          name: request
          schema:
            type: integer
          description: ID of request that specialist/organization fulfill (may be multiple)
        - in: query
          name: district
          schema:
            type: string
            format: uuid
          description: ID of district where specialists/organizations work (may be multiple)
        - in: query
          name: price
          schema:
            type: string
            enum:
              - free
              - notSpecified
              - below500
              - from500to1000
              - from1000to1500
              - above1500
          description: A price tag (may be multiple)
        - in: query
          name: priceMin
          schema:
            type: integer
          description: A minimal price.
        - in: query
          name: priceMax
          schema:
            type: integer
          description: A maximum price
        - in: query
          name: searchType
          schema:
            type: string
            enum: ['request', 'specialist', 'organization']
          description: A type of events specialists/organizations provide
        - in: query
          name: category
          schema:
            type: string
            format: uuid
          description: Category ID of clients specialists/organizations work with (may be multiple)
        - in: query
          name: specialization
          schema:
            type: string
            format: uuid
          description: ID of specialization specialists/organizations provide (may be multiple)
        - in: query
          name: specializationMethod
          schema:
            type: integer
          description: ID of method specialists/organizations provide (may be multiple)
        - in: query
          name: gender
          schema:
            type: string
            example: 'MALE'
          description: Gender of specialist
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/Event'
                        - $ref: '#/components/schemas/SearchEntry'
                  metaData:
                    type: object
                    properties:
                      lastCursor:
                        type: string
                        format: uuid
                      hasNextPage:
                        type: boolean
                      queryMonth:
                        type: integer
                        example: 1
  /search/count:
    get:
      tags:
        - search
      summary: Count events/specialists/organizations
      description: Returns a total count of events, specialists and organizations.
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: ['individual', 'family', 'group', 'business', 'pair', 'kids']
          description: A type of events specialists/organizations provide (may be multiple)
        - in: query
          name: query
          schema:
            type: string
          description: A search query
        - in: query
          name: request
          schema:
            type: integer
          description: ID of request that specialist/organization fulfill (may be multiple)
        - in: query
          name: district
          schema:
            type: string
            format: uuid
          description: ID of district where specialists/organizations work (may be multiple)
        - in: query
          name: price
          schema:
            type: string
            enum:
              - free
              - notSpecified
              - below500
              - from500to1000
              - from1000to1500
              - above1500
          description: A price tag (may be multiple)
        - in: query
          name: priceMin
          schema:
            type: integer
          description: A minimal price.
        - in: query
          name: priceMax
          schema:
            type: integer
          description: A maximum price
        - in: query
          name: searchType
          schema:
            type: string
            enum: ['request', 'specialist', 'organization']
          description: A type of events specialists/organizations provide
        - in: query
          name: category
          schema:
            type: string
            format: uuid
          description: Category ID of clients specialists/organizations work with (may be multiple)
        - in: query
          name: specialization
          schema:
            type: string
            format: uuid
          description: ID of specialization specialists/organizations provide (may be multiple)
        - in: query
          name: specializationMethod
          schema:
            type: integer
          description: ID of method specialists/organizations provide (may be multiple)
        - in: query
          name: gender
          schema:
            type: string
            example: 'MALE'
          description: Gender of specialist
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
  /search/sync:
    get:
      tags:
        - search
      summary: List events/specialists/organizations
      description: Provides a list of events, specialists and organizations.
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: A search query
        - in: query
          name: searchType
          schema:
            type: string
            enum: ['request', 'specialist', 'organization']
          required: true
          description: A type of events specialists/organizations provide
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                          example: John Doe
  /specialization:
    get:
      tags:
        - specialization
      summary: List specializations
      description: Provides a list of specializations.
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Specialization'
  /activity:
    get:
      tags:
        - activity
      summary: List activity types
      description: Provides a list of activity types.
      responses:
        '200':
          description: Successful query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityType'
  /activity/{id}:
    delete:
      tags:
        - activity
      summary: Delete activity
      description: Deletes activity from the server
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: ID of activity to delete
      responses:
        '200':
          description: Successful delete
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityType'
components:
  schemas:
    Addresses:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            format: uuid
          fullAddress:
            type: string
          districtId:
            type: string
            format: uuid
          isPrimary:
            type: boolean
          longitude:
            type: number
          latitude:
            type: number
          createdAt:
            type: string
            example: 2024-04-22T09:09:33.776Z
            format: datetime
    ActivityType:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        title:
          type: string
          example: Choreography session
        type:
          type: string
          enum: ['individual', 'family', 'group', 'business', 'pair', 'kids']
        description:
          type: string
        imagePath:
          type: string
        isActive:
          type: boolean
        priority:
          type: integer
    ClientCategory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        title:
          type: string
          example: Tag play
        organizerName:
          type: string
          example: Taggers' place
        notes:
          type: string
          example: Do not forget your suit
        address:
          type: string
          example: First street
        locationLink:
          type: string
          example: https://maps.app.goo.gl/9EBt5wYjqW5RWiBX9
        price:
          type: integer
          example: 100
        isActive:
          type: boolean
        linkId:
          type: string
          format: uuid
        eventDate:
          type: string
          format: datetime
          example: 2024-04-22T09:09:33.776Z
        format:
          type: string
          enum: ['OFFLINE', 'ONLINE', 'BOTH']
        priceType:
          type: string
          enum: ['MIN_PRICE', 'FIXED_PRICE']
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        additionalLink:
          type: object
          properties:
            id:
              type: string
              format: uuid
            createdAt:
              type: string
              example: 2024-04-22T09:09:33.776Z
              format: datetime
            label:
              type: string
              example: Our site
            link:
              type: string
              example: https://maps.app.goo.gl/9EBt5wYjqW5RWiBX9
    Method:
      type: object
      properties:
        id:
          type: string
          format: uuid
        simpleId:
          type: integer
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        title:
          type: string
          example: Kinetic games
        description:
          type: string
          example: Games that involve active movement
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        name:
          type: string
          example: The entertainers group
        expertSpecializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
        specializationMethods:
          type: array
          items:
            $ref: '#/components/schemas/Method'
        organizationType:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            createdAt:
              type: string
              example: 2024-04-22T09:09:33.776Z
              format: datetime
        ownershipType:
          type: string
          enum: ['PRIVATE', 'GOVERNMENT']
        isInclusiveSpace:
          type: boolean
        description:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone
        facebook:
          type: string
          format: url
        instagram:
          type: string
          format: url
        linkedin:
          type: string
          format: url
        telegram:
          type: string
          format: url
        tiktok:
          type: string
          format: url
        viber:
          type: string
          format: url
        website:
          type: string
          format: url
        youtube:
          type: string
          format: url
        formatOfWork:
          type: string
          enum: ['OFFLINE', 'ONLINE', 'BOTH']
        isActive:
          type: boolean
        isFreeReception:
          type: boolean
        yearsOnMarket:
          type: integer
        addresses:
          $ref: '#/components/schemas/Addresses'
        workTime:
          $ref: '#/components/schemas/Worktime'
        supportFocuses:
          $ref: '#/components/schemas/SupportFocus'
        clientsWorkingWith:
          $ref: '#/components/schemas/ClientCategory'
        clientsNotWorkingWith:
          $ref: '#/components/schemas/ClientCategory'
    Request:
      type: object
      properties:
        id:
          type: string
          format: uuid
        simpleId:
          type: integer
        name:
          type: string
          example: Experience with autistic audience
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
    SearchEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization:
          $ref: '#/components/schemas/Organization'
        organizationId:
          type: string
          format: uuid
        specialist:
          $ref: '#/components/schemas/Specialist'
        specialistId:
          type: string
          format: uuid
    Specialist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        surname:
          type: string
          example: Olegovich
        specializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
        specializationMethods:
          type: array
          items:
            $ref: '#/components/schemas/Method'
        gender:
          type: string
          example: 'MALE'
        description:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: phone
        facebook:
          type: string
          format: url
        instagram:
          type: string
          format: url
        linkedin:
          type: string
          format: url
        telegram:
          type: string
          format: url
        tiktok:
          type: string
          format: url
        viber:
          type: string
          format: url
        website:
          type: string
          format: url
        youtube:
          type: string
          format: url
        formatOfWork:
          type: string
          enum: ['OFFLINE', 'ONLINE', 'BOTH']
        isActive:
          type: boolean
        isFreeReception:
          type: boolean
        yearsOfExperience:
          type: integer
        addresses:
          $ref: '#/components/schemas/Addresses'
        workTime:
          $ref: '#/components/schemas/Worktime'
        supportFocuses:
          $ref: '#/components/schemas/SupportFocus'
        clientsWorkingWith:
          $ref: '#/components/schemas/ClientCategory'
        clientsNotWorkingWith:
          $ref: '#/components/schemas/ClientCategory'
    Specialization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        name:
          type: string
          example: baloons
    SupportFocus:
      type: object
      properties:
        id:
          type: string
          format: uuid
        price:
          type: integer
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        activity:
          $ref: '#/components/schemas/ActivityType'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/Request'
    Tag:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          example: 2024-04-22T09:09:33.776Z
          format: datetime
        name:
          type: string
          example: Tag1
    Worktime:
      type: array
      items:
        type: object
        properties:
          isDayOff:
            type: boolean
          time:
            type: string
          weekDay:
            type: string
            enum:
              - MON
              - TUE
              - WED
              - THU
              - FRI
              - SAT
              - SUN
